# stack 후위 표기법# stack array로 처리class ArrayStack:    def __init__(self):        self.data = []    def size(self):        return len(self.data)    def isEmpty(self):        return self.size() == 0    def push(self, item):        self.data.append(item)    def pop(self):        return self.data.pop()    def peek(self):        return self.data[-1]prev = {    '*': 3, '/': 3,    '+': 2, '-': 2,    '(': 1}def solution(o):    s = ArrayStack()    answer = []    for i in o:        if i in prev:            if i == "(":                s.push(i)            else:                if s.isEmpty():                    s.push(i)                else:                    if prev[i] <= prev[s.peek()]:                        answer.append(s.pop())                        s.push(i)                    else:                        s.push(i)        elif i == ")":            while s.peek() != '(':                answer.append(s.pop())            s.pop()        else:            answer.append(i)    while not s.isEmpty():        answer.append(s.pop())    return ''.join(answer)if __name__ == "__main__":    o = '(A+B)*C'    print(solution(o))    # 결과 : AB+C*