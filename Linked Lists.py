# 연결리스트class Node:    def __init__(self, data=None):        self.data = data        self.next = Noneclass LinkedList:    def __init__(self):        self.head = Node()    def length(self):        count = 0        curr = self.head        while curr.next != None:            count += 1            curr = curr.next        return count    def add(self, data):        node = Node(data)        curr = self.head        while curr.next != None:            curr = curr.next        curr.next = node    def delete(self, index):        if index >= self.length():            return "Error 'delete' index out!!"        curr_idx = 0        curr = self.head        while True:            data_curr = curr            curr = curr.next            if index == curr_idx:                data_curr.next = curr.next                return            curr_idx += 1    def display(self):        answer = []        curr = self.head        while curr.next != None:            curr = curr.next            answer.append(curr.data)        return answer    def get(self, index):        if index >= self.length():            return "Error 'get' index out!!"        curr = self.head        curr_idx = 0        while True:            curr = curr.next            if index == curr_idx:                return curr.data            curr_idx += 1if __name__ == "__main__":    L = LinkedList()    L.add(11)    L.add(22)    L.add(33)    L.add(44)    L.delete(1)    print(L.length())    print(L.display())    print(L.get(0))